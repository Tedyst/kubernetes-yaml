apiVersion: apps/v1
kind: Deployment
metadata:
  name: spotifyutils
  namespace: tedy
  labels:
    app: spotifyutils
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: spotifyutils
  template:
    metadata:
      labels:
        app: spotifyutils
    spec:
      terminationGracePeriodSeconds: 0
      initContainers:
        - name: spotifyutils-init
          resources:
            limits:
              cpu: "100m"
              memory: "100M"
          image: tedyst/spotifyutils:latest
          command: ["flask", "db", "upgrade"]
          volumeMounts:
            - mountPath: /data
              name: data
      containers:
        - name: spotifyutils
          resources:
            limits:
              cpu: "2000m"
              memory: "300M"
            requests:
              cpu: "200m"
              memory: "300M"
          image: tedyst/spotifyutils:latest
          ports:
            - containerPort: 5000
          volumeMounts:
            - mountPath: /data
              name: data
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: spotifyutils-secret
                  key: SECRETKEY
            - name: SPOTIFY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: spotifyutils-secret
                  key: SPOTIFYCLIENTID
            - name: SPOTIFY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: spotifyutils-secret
                  key: SPOTIFYCLIENTSECRET
            - name: GENIUS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: spotifyutils-secret
                  key: GENIUSTOKEN
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: spotifyutils
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: arm